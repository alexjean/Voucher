//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("WheatModel", "FK_tbCard_tbCardClass", "tbCardClass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Member.tbCardClass), "tbCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Member.tbCard), true)]
[assembly: EdmRelationshipAttribute("WheatModel", "FK_tbMember_tbCard", "tbCard", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Member.tbCard), "tbMember", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Member.tbMember), true)]
[assembly: EdmRelationshipAttribute("WheatModel", "FK_tbCashier_tbStore", "tbStore", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Member.tbStore), "tbCashier", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Member.tbCashier), true)]
[assembly: EdmRelationshipAttribute("WheatModel", "FK_tbLevelRelatePriviege_tbMemeberLevel", "tbMemeberLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Member.tbMemeberLevel), "tbLevelRelatePriviege", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Member.tbLevelRelatePriviege), true)]
[assembly: EdmRelationshipAttribute("WheatModel", "FK_tbLevelRelatePriviege_tbPrivilege", "tbPrivilege", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Member.tbPrivilege), "tbLevelRelatePriviege", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Member.tbLevelRelatePriviege), true)]
[assembly: EdmRelationshipAttribute("WheatModel", "FK_tbMember_tbMemeberLevel", "tbMemeberLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Member.tbMemeberLevel), "tbMember", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Member.tbMember), true)]
[assembly: EdmRelationshipAttribute("WheatModel", "FK_tbOrder_tbMember", "tbMember", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Member.tbMember), "tbOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Member.tbOrder), true)]
[assembly: EdmRelationshipAttribute("WheatModel", "FK_tbOrder_tbStore", "tbStore", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Member.tbStore), "tbOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Member.tbOrder), true)]
[assembly: EdmRelationshipAttribute("WheatModel", "FK_tbOrderItem_tbOrder", "tbOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Member.tbOrder), "tbOrderItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Member.tbOrderItem), true)]
[assembly: EdmRelationshipAttribute("WheatModel", "FK_tbOrderItem_tbProduct", "tbProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Member.tbProduct), "tbOrderItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Member.tbOrderItem), true)]
[assembly: EdmRelationshipAttribute("WheatModel", "FK_tbPrivilege_tbPrivilegeClass", "tbPrivilegeClass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Member.tbPrivilegeClass), "tbPrivilege", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Member.tbPrivilege), true)]

#endregion

namespace Member
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class WheatEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“WheatEntities”部分中的连接字符串初始化新 WheatEntities 对象。
        /// </summary>
        public WheatEntities() : base("name=WheatEntities", "WheatEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WheatEntities 对象。
        /// </summary>
        public WheatEntities(string connectionString) : base(connectionString, "WheatEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WheatEntities 对象。
        /// </summary>
        public WheatEntities(EntityConnection connection) : base(connection, "WheatEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbCard> tbCard
        {
            get
            {
                if ((_tbCard == null))
                {
                    _tbCard = base.CreateObjectSet<tbCard>("tbCard");
                }
                return _tbCard;
            }
        }
        private ObjectSet<tbCard> _tbCard;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbCardClass> tbCardClass
        {
            get
            {
                if ((_tbCardClass == null))
                {
                    _tbCardClass = base.CreateObjectSet<tbCardClass>("tbCardClass");
                }
                return _tbCardClass;
            }
        }
        private ObjectSet<tbCardClass> _tbCardClass;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbCashier> tbCashier
        {
            get
            {
                if ((_tbCashier == null))
                {
                    _tbCashier = base.CreateObjectSet<tbCashier>("tbCashier");
                }
                return _tbCashier;
            }
        }
        private ObjectSet<tbCashier> _tbCashier;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbLevelRelatePriviege> tbLevelRelatePriviege
        {
            get
            {
                if ((_tbLevelRelatePriviege == null))
                {
                    _tbLevelRelatePriviege = base.CreateObjectSet<tbLevelRelatePriviege>("tbLevelRelatePriviege");
                }
                return _tbLevelRelatePriviege;
            }
        }
        private ObjectSet<tbLevelRelatePriviege> _tbLevelRelatePriviege;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbMember> tbMember
        {
            get
            {
                if ((_tbMember == null))
                {
                    _tbMember = base.CreateObjectSet<tbMember>("tbMember");
                }
                return _tbMember;
            }
        }
        private ObjectSet<tbMember> _tbMember;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbMemeberLevel> tbMemeberLevel
        {
            get
            {
                if ((_tbMemeberLevel == null))
                {
                    _tbMemeberLevel = base.CreateObjectSet<tbMemeberLevel>("tbMemeberLevel");
                }
                return _tbMemeberLevel;
            }
        }
        private ObjectSet<tbMemeberLevel> _tbMemeberLevel;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbOrder> tbOrder
        {
            get
            {
                if ((_tbOrder == null))
                {
                    _tbOrder = base.CreateObjectSet<tbOrder>("tbOrder");
                }
                return _tbOrder;
            }
        }
        private ObjectSet<tbOrder> _tbOrder;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbOrderItem> tbOrderItem
        {
            get
            {
                if ((_tbOrderItem == null))
                {
                    _tbOrderItem = base.CreateObjectSet<tbOrderItem>("tbOrderItem");
                }
                return _tbOrderItem;
            }
        }
        private ObjectSet<tbOrderItem> _tbOrderItem;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbPhotos> tbPhotos
        {
            get
            {
                if ((_tbPhotos == null))
                {
                    _tbPhotos = base.CreateObjectSet<tbPhotos>("tbPhotos");
                }
                return _tbPhotos;
            }
        }
        private ObjectSet<tbPhotos> _tbPhotos;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbPrivilege> tbPrivilege
        {
            get
            {
                if ((_tbPrivilege == null))
                {
                    _tbPrivilege = base.CreateObjectSet<tbPrivilege>("tbPrivilege");
                }
                return _tbPrivilege;
            }
        }
        private ObjectSet<tbPrivilege> _tbPrivilege;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbPrivilegeClass> tbPrivilegeClass
        {
            get
            {
                if ((_tbPrivilegeClass == null))
                {
                    _tbPrivilegeClass = base.CreateObjectSet<tbPrivilegeClass>("tbPrivilegeClass");
                }
                return _tbPrivilegeClass;
            }
        }
        private ObjectSet<tbPrivilegeClass> _tbPrivilegeClass;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbProduct> tbProduct
        {
            get
            {
                if ((_tbProduct == null))
                {
                    _tbProduct = base.CreateObjectSet<tbProduct>("tbProduct");
                }
                return _tbProduct;
            }
        }
        private ObjectSet<tbProduct> _tbProduct;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbProductClass> tbProductClass
        {
            get
            {
                if ((_tbProductClass == null))
                {
                    _tbProductClass = base.CreateObjectSet<tbProductClass>("tbProductClass");
                }
                return _tbProductClass;
            }
        }
        private ObjectSet<tbProductClass> _tbProductClass;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbStore> tbStore
        {
            get
            {
                if ((_tbStore == null))
                {
                    _tbStore = base.CreateObjectSet<tbStore>("tbStore");
                }
                return _tbStore;
            }
        }
        private ObjectSet<tbStore> _tbStore;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbUser> tbUser
        {
            get
            {
                if ((_tbUser == null))
                {
                    _tbUser = base.CreateObjectSet<tbUser>("tbUser");
                }
                return _tbUser;
            }
        }
        private ObjectSet<tbUser> _tbUser;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<vExchangeGoods> vExchangeGoods
        {
            get
            {
                if ((_vExchangeGoods == null))
                {
                    _vExchangeGoods = base.CreateObjectSet<vExchangeGoods>("vExchangeGoods");
                }
                return _vExchangeGoods;
            }
        }
        private ObjectSet<vExchangeGoods> _vExchangeGoods;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 tbCard EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbCard(tbCard tbCard)
        {
            base.AddObject("tbCard", tbCard);
        }
    
        /// <summary>
        /// 用于向 tbCardClass EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbCardClass(tbCardClass tbCardClass)
        {
            base.AddObject("tbCardClass", tbCardClass);
        }
    
        /// <summary>
        /// 用于向 tbCashier EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbCashier(tbCashier tbCashier)
        {
            base.AddObject("tbCashier", tbCashier);
        }
    
        /// <summary>
        /// 用于向 tbLevelRelatePriviege EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbLevelRelatePriviege(tbLevelRelatePriviege tbLevelRelatePriviege)
        {
            base.AddObject("tbLevelRelatePriviege", tbLevelRelatePriviege);
        }
    
        /// <summary>
        /// 用于向 tbMember EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbMember(tbMember tbMember)
        {
            base.AddObject("tbMember", tbMember);
        }
    
        /// <summary>
        /// 用于向 tbMemeberLevel EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbMemeberLevel(tbMemeberLevel tbMemeberLevel)
        {
            base.AddObject("tbMemeberLevel", tbMemeberLevel);
        }
    
        /// <summary>
        /// 用于向 tbOrder EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbOrder(tbOrder tbOrder)
        {
            base.AddObject("tbOrder", tbOrder);
        }
    
        /// <summary>
        /// 用于向 tbOrderItem EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbOrderItem(tbOrderItem tbOrderItem)
        {
            base.AddObject("tbOrderItem", tbOrderItem);
        }
    
        /// <summary>
        /// 用于向 tbPhotos EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbPhotos(tbPhotos tbPhotos)
        {
            base.AddObject("tbPhotos", tbPhotos);
        }
    
        /// <summary>
        /// 用于向 tbPrivilege EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbPrivilege(tbPrivilege tbPrivilege)
        {
            base.AddObject("tbPrivilege", tbPrivilege);
        }
    
        /// <summary>
        /// 用于向 tbPrivilegeClass EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbPrivilegeClass(tbPrivilegeClass tbPrivilegeClass)
        {
            base.AddObject("tbPrivilegeClass", tbPrivilegeClass);
        }
    
        /// <summary>
        /// 用于向 tbProduct EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbProduct(tbProduct tbProduct)
        {
            base.AddObject("tbProduct", tbProduct);
        }
    
        /// <summary>
        /// 用于向 tbProductClass EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbProductClass(tbProductClass tbProductClass)
        {
            base.AddObject("tbProductClass", tbProductClass);
        }
    
        /// <summary>
        /// 用于向 tbStore EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbStore(tbStore tbStore)
        {
            base.AddObject("tbStore", tbStore);
        }
    
        /// <summary>
        /// 用于向 tbUser EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbUser(tbUser tbUser)
        {
            base.AddObject("tbUser", tbUser);
        }
    
        /// <summary>
        /// 用于向 vExchangeGoods EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTovExchangeGoods(vExchangeGoods vExchangeGoods)
        {
            base.AddObject("vExchangeGoods", vExchangeGoods);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbCard : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbCard 对象。
        /// </summary>
        /// <param name="cardId">CardId 属性的初始值。</param>
        public static tbCard CreatetbCard(global::System.Int32 cardId)
        {
            tbCard tbCard = new tbCard();
            tbCard.CardId = cardId;
            return tbCard;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardId
        {
            get
            {
                return _CardId;
            }
            set
            {
                if (_CardId != value)
                {
                    OnCardIdChanging(value);
                    ReportPropertyChanging("CardId");
                    _CardId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CardId");
                    OnCardIdChanged();
                }
            }
        }
        private global::System.Int32 _CardId;
        partial void OnCardIdChanging(global::System.Int32 value);
        partial void OnCardIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardNumber
        {
            get
            {
                return _CardNumber;
            }
            set
            {
                OnCardNumberChanging(value);
                ReportPropertyChanging("CardNumber");
                _CardNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardNumber");
                OnCardNumberChanged();
            }
        }
        private global::System.String _CardNumber;
        partial void OnCardNumberChanging(global::System.String value);
        partial void OnCardNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CardStatus
        {
            get
            {
                return _CardStatus;
            }
            set
            {
                OnCardStatusChanging(value);
                ReportPropertyChanging("CardStatus");
                _CardStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardStatus");
                OnCardStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _CardStatus;
        partial void OnCardStatusChanging(Nullable<global::System.Int32> value);
        partial void OnCardStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardCDKEY
        {
            get
            {
                return _CardCDKEY;
            }
            set
            {
                OnCardCDKEYChanging(value);
                ReportPropertyChanging("CardCDKEY");
                _CardCDKEY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardCDKEY");
                OnCardCDKEYChanged();
            }
        }
        private global::System.String _CardCDKEY;
        partial void OnCardCDKEYChanging(global::System.String value);
        partial void OnCardCDKEYChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CardSetLevel
        {
            get
            {
                return _CardSetLevel;
            }
            set
            {
                OnCardSetLevelChanging(value);
                ReportPropertyChanging("CardSetLevel");
                _CardSetLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardSetLevel");
                OnCardSetLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _CardSetLevel;
        partial void OnCardSetLevelChanging(Nullable<global::System.Int32> value);
        partial void OnCardSetLevelChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CardSetLevelEnabled
        {
            get
            {
                return _CardSetLevelEnabled;
            }
            set
            {
                OnCardSetLevelEnabledChanging(value);
                ReportPropertyChanging("CardSetLevelEnabled");
                _CardSetLevelEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardSetLevelEnabled");
                OnCardSetLevelEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _CardSetLevelEnabled;
        partial void OnCardSetLevelEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnCardSetLevelEnabledChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CardClassId
        {
            get
            {
                return _CardClassId;
            }
            set
            {
                OnCardClassIdChanging(value);
                ReportPropertyChanging("CardClassId");
                _CardClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardClassId");
                OnCardClassIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CardClassId;
        partial void OnCardClassIdChanging(Nullable<global::System.Int32> value);
        partial void OnCardClassIdChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbCard_tbCardClass", "tbCardClass")]
        public tbCardClass tbCardClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbCardClass>("WheatModel.FK_tbCard_tbCardClass", "tbCardClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbCardClass>("WheatModel.FK_tbCard_tbCardClass", "tbCardClass").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tbCardClass> tbCardClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbCardClass>("WheatModel.FK_tbCard_tbCardClass", "tbCardClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tbCardClass>("WheatModel.FK_tbCard_tbCardClass", "tbCardClass", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbMember_tbCard", "tbMember")]
        public EntityCollection<tbMember> tbMember
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tbMember>("WheatModel.FK_tbMember_tbCard", "tbMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tbMember>("WheatModel.FK_tbMember_tbCard", "tbMember", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbCardClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbCardClass : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbCardClass 对象。
        /// </summary>
        /// <param name="cardClassId">CardClassId 属性的初始值。</param>
        public static tbCardClass CreatetbCardClass(global::System.Int32 cardClassId)
        {
            tbCardClass tbCardClass = new tbCardClass();
            tbCardClass.CardClassId = cardClassId;
            return tbCardClass;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardClassId
        {
            get
            {
                return _CardClassId;
            }
            set
            {
                if (_CardClassId != value)
                {
                    OnCardClassIdChanging(value);
                    ReportPropertyChanging("CardClassId");
                    _CardClassId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CardClassId");
                    OnCardClassIdChanged();
                }
            }
        }
        private global::System.Int32 _CardClassId;
        partial void OnCardClassIdChanging(global::System.Int32 value);
        partial void OnCardClassIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardClassName
        {
            get
            {
                return _CardClassName;
            }
            set
            {
                OnCardClassNameChanging(value);
                ReportPropertyChanging("CardClassName");
                _CardClassName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardClassName");
                OnCardClassNameChanged();
            }
        }
        private global::System.String _CardClassName;
        partial void OnCardClassNameChanging(global::System.String value);
        partial void OnCardClassNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardAgreement
        {
            get
            {
                return _CardAgreement;
            }
            set
            {
                OnCardAgreementChanging(value);
                ReportPropertyChanging("CardAgreement");
                _CardAgreement = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardAgreement");
                OnCardAgreementChanged();
            }
        }
        private global::System.String _CardAgreement;
        partial void OnCardAgreementChanging(global::System.String value);
        partial void OnCardAgreementChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardDescription
        {
            get
            {
                return _CardDescription;
            }
            set
            {
                OnCardDescriptionChanging(value);
                ReportPropertyChanging("CardDescription");
                _CardDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardDescription");
                OnCardDescriptionChanged();
            }
        }
        private global::System.String _CardDescription;
        partial void OnCardDescriptionChanging(global::System.String value);
        partial void OnCardDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardIntroduce
        {
            get
            {
                return _CardIntroduce;
            }
            set
            {
                OnCardIntroduceChanging(value);
                ReportPropertyChanging("CardIntroduce");
                _CardIntroduce = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardIntroduce");
                OnCardIntroduceChanged();
            }
        }
        private global::System.String _CardIntroduce;
        partial void OnCardIntroduceChanging(global::System.String value);
        partial void OnCardIntroduceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardColor
        {
            get
            {
                return _CardColor;
            }
            set
            {
                OnCardColorChanging(value);
                ReportPropertyChanging("CardColor");
                _CardColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardColor");
                OnCardColorChanged();
            }
        }
        private global::System.String _CardColor;
        partial void OnCardColorChanging(global::System.String value);
        partial void OnCardColorChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbCard_tbCardClass", "tbCard")]
        public EntityCollection<tbCard> tbCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tbCard>("WheatModel.FK_tbCard_tbCardClass", "tbCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tbCard>("WheatModel.FK_tbCard_tbCardClass", "tbCard", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbCashier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbCashier : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbCashier 对象。
        /// </summary>
        /// <param name="sNId">SNId 属性的初始值。</param>
        public static tbCashier CreatetbCashier(global::System.Int32 sNId)
        {
            tbCashier tbCashier = new tbCashier();
            tbCashier.SNId = sNId;
            return tbCashier;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SNId
        {
            get
            {
                return _SNId;
            }
            set
            {
                if (_SNId != value)
                {
                    OnSNIdChanging(value);
                    ReportPropertyChanging("SNId");
                    _SNId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SNId");
                    OnSNIdChanged();
                }
            }
        }
        private global::System.Int32 _SNId;
        partial void OnSNIdChanging(global::System.Int32 value);
        partial void OnSNIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CashierId
        {
            get
            {
                return _CashierId;
            }
            set
            {
                OnCashierIdChanging(value);
                ReportPropertyChanging("CashierId");
                _CashierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CashierId");
                OnCashierIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CashierId;
        partial void OnCashierIdChanging(Nullable<global::System.Int32> value);
        partial void OnCashierIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CashierName
        {
            get
            {
                return _CashierName;
            }
            set
            {
                OnCashierNameChanging(value);
                ReportPropertyChanging("CashierName");
                _CashierName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CashierName");
                OnCashierNameChanged();
            }
        }
        private global::System.String _CashierName;
        partial void OnCashierNameChanging(global::System.String value);
        partial void OnCashierNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Inpositon
        {
            get
            {
                return _Inpositon;
            }
            set
            {
                OnInpositonChanging(value);
                ReportPropertyChanging("Inpositon");
                _Inpositon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inpositon");
                OnInpositonChanged();
            }
        }
        private Nullable<global::System.Boolean> _Inpositon;
        partial void OnInpositonChanging(Nullable<global::System.Boolean> value);
        partial void OnInpositonChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdated;
        partial void OnLastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StoreId
        {
            get
            {
                return _StoreId;
            }
            set
            {
                OnStoreIdChanging(value);
                ReportPropertyChanging("StoreId");
                _StoreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoreId");
                OnStoreIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StoreId;
        partial void OnStoreIdChanging(Nullable<global::System.Int32> value);
        partial void OnStoreIdChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbCashier_tbStore", "tbStore")]
        public tbStore tbStore
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbStore>("WheatModel.FK_tbCashier_tbStore", "tbStore").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbStore>("WheatModel.FK_tbCashier_tbStore", "tbStore").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tbStore> tbStoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbStore>("WheatModel.FK_tbCashier_tbStore", "tbStore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tbStore>("WheatModel.FK_tbCashier_tbStore", "tbStore", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbLevelRelatePriviege")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbLevelRelatePriviege : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbLevelRelatePriviege 对象。
        /// </summary>
        /// <param name="relateId">RelateId 属性的初始值。</param>
        public static tbLevelRelatePriviege CreatetbLevelRelatePriviege(global::System.Int32 relateId)
        {
            tbLevelRelatePriviege tbLevelRelatePriviege = new tbLevelRelatePriviege();
            tbLevelRelatePriviege.RelateId = relateId;
            return tbLevelRelatePriviege;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelateId
        {
            get
            {
                return _RelateId;
            }
            set
            {
                if (_RelateId != value)
                {
                    OnRelateIdChanging(value);
                    ReportPropertyChanging("RelateId");
                    _RelateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RelateId");
                    OnRelateIdChanged();
                }
            }
        }
        private global::System.Int32 _RelateId;
        partial void OnRelateIdChanging(global::System.Int32 value);
        partial void OnRelateIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MemberLevelId
        {
            get
            {
                return _MemberLevelId;
            }
            set
            {
                OnMemberLevelIdChanging(value);
                ReportPropertyChanging("MemberLevelId");
                _MemberLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberLevelId");
                OnMemberLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MemberLevelId;
        partial void OnMemberLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnMemberLevelIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrivilegeId
        {
            get
            {
                return _PrivilegeId;
            }
            set
            {
                OnPrivilegeIdChanging(value);
                ReportPropertyChanging("PrivilegeId");
                _PrivilegeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrivilegeId");
                OnPrivilegeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PrivilegeId;
        partial void OnPrivilegeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPrivilegeIdChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbLevelRelatePriviege_tbMemeberLevel", "tbMemeberLevel")]
        public tbMemeberLevel tbMemeberLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbMemeberLevel>("WheatModel.FK_tbLevelRelatePriviege_tbMemeberLevel", "tbMemeberLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbMemeberLevel>("WheatModel.FK_tbLevelRelatePriviege_tbMemeberLevel", "tbMemeberLevel").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tbMemeberLevel> tbMemeberLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbMemeberLevel>("WheatModel.FK_tbLevelRelatePriviege_tbMemeberLevel", "tbMemeberLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tbMemeberLevel>("WheatModel.FK_tbLevelRelatePriviege_tbMemeberLevel", "tbMemeberLevel", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbLevelRelatePriviege_tbPrivilege", "tbPrivilege")]
        public tbPrivilege tbPrivilege
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbPrivilege>("WheatModel.FK_tbLevelRelatePriviege_tbPrivilege", "tbPrivilege").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbPrivilege>("WheatModel.FK_tbLevelRelatePriviege_tbPrivilege", "tbPrivilege").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tbPrivilege> tbPrivilegeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbPrivilege>("WheatModel.FK_tbLevelRelatePriviege_tbPrivilege", "tbPrivilege");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tbPrivilege>("WheatModel.FK_tbLevelRelatePriviege_tbPrivilege", "tbPrivilege", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbMember : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbMember 对象。
        /// </summary>
        /// <param name="memberId">MemberId 属性的初始值。</param>
        public static tbMember CreatetbMember(global::System.Guid memberId)
        {
            tbMember tbMember = new tbMember();
            tbMember.MemberId = memberId;
            return tbMember;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                if (_MemberId != value)
                {
                    OnMemberIdChanging(value);
                    ReportPropertyChanging("MemberId");
                    _MemberId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberId");
                    OnMemberIdChanged();
                }
            }
        }
        private global::System.Guid _MemberId;
        partial void OnMemberIdChanging(global::System.Guid value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MemberName
        {
            get
            {
                return _MemberName;
            }
            set
            {
                OnMemberNameChanging(value);
                ReportPropertyChanging("MemberName");
                _MemberName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MemberName");
                OnMemberNameChanged();
            }
        }
        private global::System.String _MemberName;
        partial void OnMemberNameChanging(global::System.String value);
        partial void OnMemberNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MemberPassword
        {
            get
            {
                return _MemberPassword;
            }
            set
            {
                OnMemberPasswordChanging(value);
                ReportPropertyChanging("MemberPassword");
                _MemberPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MemberPassword");
                OnMemberPasswordChanged();
            }
        }
        private global::System.String _MemberPassword;
        partial void OnMemberPasswordChanging(global::System.String value);
        partial void OnMemberPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MemberRegisterTime
        {
            get
            {
                return _MemberRegisterTime;
            }
            set
            {
                OnMemberRegisterTimeChanging(value);
                ReportPropertyChanging("MemberRegisterTime");
                _MemberRegisterTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberRegisterTime");
                OnMemberRegisterTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MemberRegisterTime;
        partial void OnMemberRegisterTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMemberRegisterTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MemberEmail
        {
            get
            {
                return _MemberEmail;
            }
            set
            {
                OnMemberEmailChanging(value);
                ReportPropertyChanging("MemberEmail");
                _MemberEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MemberEmail");
                OnMemberEmailChanged();
            }
        }
        private global::System.String _MemberEmail;
        partial void OnMemberEmailChanging(global::System.String value);
        partial void OnMemberEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MemberLoginTime
        {
            get
            {
                return _MemberLoginTime;
            }
            set
            {
                OnMemberLoginTimeChanging(value);
                ReportPropertyChanging("MemberLoginTime");
                _MemberLoginTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberLoginTime");
                OnMemberLoginTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MemberLoginTime;
        partial void OnMemberLoginTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMemberLoginTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MemberIsDel
        {
            get
            {
                return _MemberIsDel;
            }
            set
            {
                OnMemberIsDelChanging(value);
                ReportPropertyChanging("MemberIsDel");
                _MemberIsDel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberIsDel");
                OnMemberIsDelChanged();
            }
        }
        private Nullable<global::System.Boolean> _MemberIsDel;
        partial void OnMemberIsDelChanging(Nullable<global::System.Boolean> value);
        partial void OnMemberIsDelChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MemberCard
        {
            get
            {
                return _MemberCard;
            }
            set
            {
                OnMemberCardChanging(value);
                ReportPropertyChanging("MemberCard");
                _MemberCard = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberCard");
                OnMemberCardChanged();
            }
        }
        private Nullable<global::System.Int32> _MemberCard;
        partial void OnMemberCardChanging(Nullable<global::System.Int32> value);
        partial void OnMemberCardChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MemberSex
        {
            get
            {
                return _MemberSex;
            }
            set
            {
                OnMemberSexChanging(value);
                ReportPropertyChanging("MemberSex");
                _MemberSex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberSex");
                OnMemberSexChanged();
            }
        }
        private Nullable<global::System.Boolean> _MemberSex;
        partial void OnMemberSexChanging(Nullable<global::System.Boolean> value);
        partial void OnMemberSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MemberPhone
        {
            get
            {
                return _MemberPhone;
            }
            set
            {
                OnMemberPhoneChanging(value);
                ReportPropertyChanging("MemberPhone");
                _MemberPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MemberPhone");
                OnMemberPhoneChanged();
            }
        }
        private global::System.String _MemberPhone;
        partial void OnMemberPhoneChanging(global::System.String value);
        partial void OnMemberPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MemberBirthday
        {
            get
            {
                return _MemberBirthday;
            }
            set
            {
                OnMemberBirthdayChanging(value);
                ReportPropertyChanging("MemberBirthday");
                _MemberBirthday = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MemberBirthday");
                OnMemberBirthdayChanged();
            }
        }
        private global::System.String _MemberBirthday;
        partial void OnMemberBirthdayChanging(global::System.String value);
        partial void OnMemberBirthdayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MemberAddress
        {
            get
            {
                return _MemberAddress;
            }
            set
            {
                OnMemberAddressChanging(value);
                ReportPropertyChanging("MemberAddress");
                _MemberAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MemberAddress");
                OnMemberAddressChanged();
            }
        }
        private global::System.String _MemberAddress;
        partial void OnMemberAddressChanging(global::System.String value);
        partial void OnMemberAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MemberIDCard
        {
            get
            {
                return _MemberIDCard;
            }
            set
            {
                OnMemberIDCardChanging(value);
                ReportPropertyChanging("MemberIDCard");
                _MemberIDCard = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MemberIDCard");
                OnMemberIDCardChanged();
            }
        }
        private global::System.String _MemberIDCard;
        partial void OnMemberIDCardChanging(global::System.String value);
        partial void OnMemberIDCardChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MemberPoint
        {
            get
            {
                return _MemberPoint;
            }
            set
            {
                OnMemberPointChanging(value);
                ReportPropertyChanging("MemberPoint");
                _MemberPoint = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberPoint");
                OnMemberPointChanged();
            }
        }
        private Nullable<global::System.Int32> _MemberPoint;
        partial void OnMemberPointChanging(Nullable<global::System.Int32> value);
        partial void OnMemberPointChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MemberLevel
        {
            get
            {
                return _MemberLevel;
            }
            set
            {
                OnMemberLevelChanging(value);
                ReportPropertyChanging("MemberLevel");
                _MemberLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberLevel");
                OnMemberLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _MemberLevel;
        partial void OnMemberLevelChanging(Nullable<global::System.Int32> value);
        partial void OnMemberLevelChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbMember_tbCard", "tbCard")]
        public tbCard tbCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbCard>("WheatModel.FK_tbMember_tbCard", "tbCard").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbCard>("WheatModel.FK_tbMember_tbCard", "tbCard").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tbCard> tbCardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbCard>("WheatModel.FK_tbMember_tbCard", "tbCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tbCard>("WheatModel.FK_tbMember_tbCard", "tbCard", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbMember_tbMemeberLevel", "tbMemeberLevel")]
        public tbMemeberLevel tbMemeberLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbMemeberLevel>("WheatModel.FK_tbMember_tbMemeberLevel", "tbMemeberLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbMemeberLevel>("WheatModel.FK_tbMember_tbMemeberLevel", "tbMemeberLevel").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tbMemeberLevel> tbMemeberLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbMemeberLevel>("WheatModel.FK_tbMember_tbMemeberLevel", "tbMemeberLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tbMemeberLevel>("WheatModel.FK_tbMember_tbMemeberLevel", "tbMemeberLevel", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbOrder_tbMember", "tbOrder")]
        public EntityCollection<tbOrder> tbOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tbOrder>("WheatModel.FK_tbOrder_tbMember", "tbOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tbOrder>("WheatModel.FK_tbOrder_tbMember", "tbOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbMemeberLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbMemeberLevel : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbMemeberLevel 对象。
        /// </summary>
        /// <param name="memeberLevelId">MemeberLevelId 属性的初始值。</param>
        public static tbMemeberLevel CreatetbMemeberLevel(global::System.Int32 memeberLevelId)
        {
            tbMemeberLevel tbMemeberLevel = new tbMemeberLevel();
            tbMemeberLevel.MemeberLevelId = memeberLevelId;
            return tbMemeberLevel;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemeberLevelId
        {
            get
            {
                return _MemeberLevelId;
            }
            set
            {
                if (_MemeberLevelId != value)
                {
                    OnMemeberLevelIdChanging(value);
                    ReportPropertyChanging("MemeberLevelId");
                    _MemeberLevelId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemeberLevelId");
                    OnMemeberLevelIdChanged();
                }
            }
        }
        private global::System.Int32 _MemeberLevelId;
        partial void OnMemeberLevelIdChanging(global::System.Int32 value);
        partial void OnMemeberLevelIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MemeberLevelName
        {
            get
            {
                return _MemeberLevelName;
            }
            set
            {
                OnMemeberLevelNameChanging(value);
                ReportPropertyChanging("MemeberLevelName");
                _MemeberLevelName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MemeberLevelName");
                OnMemeberLevelNameChanged();
            }
        }
        private global::System.String _MemeberLevelName;
        partial void OnMemeberLevelNameChanging(global::System.String value);
        partial void OnMemeberLevelNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MemeberLevelDescribe
        {
            get
            {
                return _MemeberLevelDescribe;
            }
            set
            {
                OnMemeberLevelDescribeChanging(value);
                ReportPropertyChanging("MemeberLevelDescribe");
                _MemeberLevelDescribe = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MemeberLevelDescribe");
                OnMemeberLevelDescribeChanged();
            }
        }
        private global::System.String _MemeberLevelDescribe;
        partial void OnMemeberLevelDescribeChanging(global::System.String value);
        partial void OnMemeberLevelDescribeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbLevelRelatePriviege_tbMemeberLevel", "tbLevelRelatePriviege")]
        public EntityCollection<tbLevelRelatePriviege> tbLevelRelatePriviege
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tbLevelRelatePriviege>("WheatModel.FK_tbLevelRelatePriviege_tbMemeberLevel", "tbLevelRelatePriviege");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tbLevelRelatePriviege>("WheatModel.FK_tbLevelRelatePriviege_tbMemeberLevel", "tbLevelRelatePriviege", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbMember_tbMemeberLevel", "tbMember")]
        public EntityCollection<tbMember> tbMember
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tbMember>("WheatModel.FK_tbMember_tbMemeberLevel", "tbMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tbMember>("WheatModel.FK_tbMember_tbMemeberLevel", "tbMember", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbOrder : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbOrder 对象。
        /// </summary>
        /// <param name="storeID">StoreID 属性的初始值。</param>
        /// <param name="id">ID 属性的初始值。</param>
        public static tbOrder CreatetbOrder(global::System.Int32 storeID, global::System.Int32 id)
        {
            tbOrder tbOrder = new tbOrder();
            tbOrder.StoreID = storeID;
            tbOrder.ID = id;
            return tbOrder;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreID
        {
            get
            {
                return _StoreID;
            }
            set
            {
                if (_StoreID != value)
                {
                    OnStoreIDChanging(value);
                    ReportPropertyChanging("StoreID");
                    _StoreID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoreID");
                    OnStoreIDChanged();
                }
            }
        }
        private global::System.Int32 _StoreID;
        partial void OnStoreIDChanging(global::System.Int32 value);
        partial void OnStoreIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CashierID
        {
            get
            {
                return _CashierID;
            }
            set
            {
                OnCashierIDChanging(value);
                ReportPropertyChanging("CashierID");
                _CashierID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CashierID");
                OnCashierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CashierID;
        partial void OnCashierIDChanging(Nullable<global::System.Int32> value);
        partial void OnCashierIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PrintTime
        {
            get
            {
                return _PrintTime;
            }
            set
            {
                OnPrintTimeChanging(value);
                ReportPropertyChanging("PrintTime");
                _PrintTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrintTime");
                OnPrintTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _PrintTime;
        partial void OnPrintTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnPrintTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Income
        {
            get
            {
                return _Income;
            }
            set
            {
                OnIncomeChanging(value);
                ReportPropertyChanging("Income");
                _Income = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Income");
                OnIncomeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Income;
        partial void OnIncomeChanging(Nullable<global::System.Decimal> value);
        partial void OnIncomeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BranchID
        {
            get
            {
                return _BranchID;
            }
            set
            {
                OnBranchIDChanging(value);
                ReportPropertyChanging("BranchID");
                _BranchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BranchID");
                OnBranchIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BranchID;
        partial void OnBranchIDChanging(Nullable<global::System.Int32> value);
        partial void OnBranchIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Deduct
        {
            get
            {
                return _Deduct;
            }
            set
            {
                OnDeductChanging(value);
                ReportPropertyChanging("Deduct");
                _Deduct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deduct");
                OnDeductChanged();
            }
        }
        private Nullable<global::System.Decimal> _Deduct;
        partial void OnDeductChanging(Nullable<global::System.Decimal> value);
        partial void OnDeductChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DiscountRate
        {
            get
            {
                return _DiscountRate;
            }
            set
            {
                OnDiscountRateChanging(value);
                ReportPropertyChanging("DiscountRate");
                _DiscountRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountRate");
                OnDiscountRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _DiscountRate;
        partial void OnDiscountRateChanging(Nullable<global::System.Decimal> value);
        partial void OnDiscountRateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayBy
        {
            get
            {
                return _PayBy;
            }
            set
            {
                OnPayByChanging(value);
                ReportPropertyChanging("PayBy");
                _PayBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayBy");
                OnPayByChanged();
            }
        }
        private global::System.String _PayBy;
        partial void OnPayByChanging(global::System.String value);
        partial void OnPayByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OldID
        {
            get
            {
                return _OldID;
            }
            set
            {
                OnOldIDChanging(value);
                ReportPropertyChanging("OldID");
                _OldID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OldID");
                OnOldIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OldID;
        partial void OnOldIDChanging(Nullable<global::System.Int32> value);
        partial void OnOldIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RCashierID
        {
            get
            {
                return _RCashierID;
            }
            set
            {
                OnRCashierIDChanging(value);
                ReportPropertyChanging("RCashierID");
                _RCashierID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RCashierID");
                OnRCashierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RCashierID;
        partial void OnRCashierIDChanging(Nullable<global::System.Int32> value);
        partial void OnRCashierIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] MD5
        {
            get
            {
                return StructuralObject.GetValidValue(_MD5);
            }
            set
            {
                OnMD5Changing(value);
                ReportPropertyChanging("MD5");
                _MD5 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MD5");
                OnMD5Changed();
            }
        }
        private global::System.Byte[] _MD5;
        partial void OnMD5Changing(global::System.Byte[] value);
        partial void OnMD5Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                OnMemberIDChanging(value);
                ReportPropertyChanging("MemberID");
                _MemberID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberID");
                OnMemberIDChanged();
            }
        }
        private Nullable<global::System.Guid> _MemberID;
        partial void OnMemberIDChanging(Nullable<global::System.Guid> value);
        partial void OnMemberIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Point
        {
            get
            {
                return _Point;
            }
            set
            {
                OnPointChanging(value);
                ReportPropertyChanging("Point");
                _Point = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Point");
                OnPointChanged();
            }
        }
        private Nullable<global::System.Int32> _Point;
        partial void OnPointChanging(Nullable<global::System.Int32> value);
        partial void OnPointChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbOrder_tbMember", "tbMember")]
        public tbMember tbMember
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbMember>("WheatModel.FK_tbOrder_tbMember", "tbMember").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbMember>("WheatModel.FK_tbOrder_tbMember", "tbMember").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tbMember> tbMemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbMember>("WheatModel.FK_tbOrder_tbMember", "tbMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tbMember>("WheatModel.FK_tbOrder_tbMember", "tbMember", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbOrder_tbStore", "tbStore")]
        public tbStore tbStore
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbStore>("WheatModel.FK_tbOrder_tbStore", "tbStore").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbStore>("WheatModel.FK_tbOrder_tbStore", "tbStore").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tbStore> tbStoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbStore>("WheatModel.FK_tbOrder_tbStore", "tbStore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tbStore>("WheatModel.FK_tbOrder_tbStore", "tbStore", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbOrderItem_tbOrder", "tbOrderItem")]
        public EntityCollection<tbOrderItem> tbOrderItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tbOrderItem>("WheatModel.FK_tbOrderItem_tbOrder", "tbOrderItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tbOrderItem>("WheatModel.FK_tbOrderItem_tbOrder", "tbOrderItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbOrderItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbOrderItem : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbOrderItem 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="index">Index 属性的初始值。</param>
        /// <param name="storeId">StoreId 属性的初始值。</param>
        public static tbOrderItem CreatetbOrderItem(global::System.Int32 id, global::System.Int32 index, global::System.Int32 storeId)
        {
            tbOrderItem tbOrderItem = new tbOrderItem();
            tbOrderItem.ID = id;
            tbOrderItem.Index = index;
            tbOrderItem.StoreId = storeId;
            return tbOrderItem;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Index
        {
            get
            {
                return _Index;
            }
            set
            {
                if (_Index != value)
                {
                    OnIndexChanging(value);
                    ReportPropertyChanging("Index");
                    _Index = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Index");
                    OnIndexChanged();
                }
            }
        }
        private global::System.Int32 _Index;
        partial void OnIndexChanging(global::System.Int32 value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductID;
        partial void OnProductIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> No
        {
            get
            {
                return _No;
            }
            set
            {
                OnNoChanging(value);
                ReportPropertyChanging("No");
                _No = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("No");
                OnNoChanged();
            }
        }
        private Nullable<global::System.Decimal> _No;
        partial void OnNoChanging(Nullable<global::System.Decimal> value);
        partial void OnNoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Boolean> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Boolean> value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                OnItemIDChanging(value);
                ReportPropertyChanging("ItemID");
                _ItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemID");
                OnItemIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemID;
        partial void OnItemIDChanging(Nullable<global::System.Int32> value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreId
        {
            get
            {
                return _StoreId;
            }
            set
            {
                if (_StoreId != value)
                {
                    OnStoreIdChanging(value);
                    ReportPropertyChanging("StoreId");
                    _StoreId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoreId");
                    OnStoreIdChanged();
                }
            }
        }
        private global::System.Int32 _StoreId;
        partial void OnStoreIdChanging(global::System.Int32 value);
        partial void OnStoreIdChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbOrderItem_tbOrder", "tbOrder")]
        public tbOrder tbOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbOrder>("WheatModel.FK_tbOrderItem_tbOrder", "tbOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbOrder>("WheatModel.FK_tbOrderItem_tbOrder", "tbOrder").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tbOrder> tbOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbOrder>("WheatModel.FK_tbOrderItem_tbOrder", "tbOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tbOrder>("WheatModel.FK_tbOrderItem_tbOrder", "tbOrder", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbOrderItem_tbProduct", "tbProduct")]
        public tbProduct tbProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbProduct>("WheatModel.FK_tbOrderItem_tbProduct", "tbProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbProduct>("WheatModel.FK_tbOrderItem_tbProduct", "tbProduct").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tbProduct> tbProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbProduct>("WheatModel.FK_tbOrderItem_tbProduct", "tbProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tbProduct>("WheatModel.FK_tbOrderItem_tbProduct", "tbProduct", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbPhotos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbPhotos : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbPhotos 对象。
        /// </summary>
        /// <param name="tableID">TableID 属性的初始值。</param>
        /// <param name="photoID">PhotoID 属性的初始值。</param>
        /// <param name="storeID">StoreID 属性的初始值。</param>
        public static tbPhotos CreatetbPhotos(global::System.Int16 tableID, global::System.Int32 photoID, global::System.Int32 storeID)
        {
            tbPhotos tbPhotos = new tbPhotos();
            tbPhotos.TableID = tableID;
            tbPhotos.PhotoID = photoID;
            tbPhotos.StoreID = storeID;
            return tbPhotos;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 TableID
        {
            get
            {
                return _TableID;
            }
            set
            {
                OnTableIDChanging(value);
                ReportPropertyChanging("TableID");
                _TableID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TableID");
                OnTableIDChanged();
            }
        }
        private global::System.Int16 _TableID;
        partial void OnTableIDChanging(global::System.Int16 value);
        partial void OnTableIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhotoID
        {
            get
            {
                return _PhotoID;
            }
            set
            {
                if (_PhotoID != value)
                {
                    OnPhotoIDChanging(value);
                    ReportPropertyChanging("PhotoID");
                    _PhotoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PhotoID");
                    OnPhotoIDChanged();
                }
            }
        }
        private global::System.Int32 _PhotoID;
        partial void OnPhotoIDChanging(global::System.Int32 value);
        partial void OnPhotoIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateTime
        {
            get
            {
                return _UpdateTime;
            }
            set
            {
                OnUpdateTimeChanging(value);
                ReportPropertyChanging("UpdateTime");
                _UpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateTime");
                OnUpdateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateTime;
        partial void OnUpdateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreID
        {
            get
            {
                return _StoreID;
            }
            set
            {
                if (_StoreID != value)
                {
                    OnStoreIDChanging(value);
                    ReportPropertyChanging("StoreID");
                    _StoreID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoreID");
                    OnStoreIDChanged();
                }
            }
        }
        private global::System.Int32 _StoreID;
        partial void OnStoreIDChanging(global::System.Int32 value);
        partial void OnStoreIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbPrivilege")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbPrivilege : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbPrivilege 对象。
        /// </summary>
        /// <param name="privilegeId">PrivilegeId 属性的初始值。</param>
        public static tbPrivilege CreatetbPrivilege(global::System.Int32 privilegeId)
        {
            tbPrivilege tbPrivilege = new tbPrivilege();
            tbPrivilege.PrivilegeId = privilegeId;
            return tbPrivilege;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrivilegeId
        {
            get
            {
                return _PrivilegeId;
            }
            set
            {
                if (_PrivilegeId != value)
                {
                    OnPrivilegeIdChanging(value);
                    ReportPropertyChanging("PrivilegeId");
                    _PrivilegeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrivilegeId");
                    OnPrivilegeIdChanged();
                }
            }
        }
        private global::System.Int32 _PrivilegeId;
        partial void OnPrivilegeIdChanging(global::System.Int32 value);
        partial void OnPrivilegeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrivivilegeClass
        {
            get
            {
                return _PrivivilegeClass;
            }
            set
            {
                OnPrivivilegeClassChanging(value);
                ReportPropertyChanging("PrivivilegeClass");
                _PrivivilegeClass = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrivivilegeClass");
                OnPrivivilegeClassChanged();
            }
        }
        private Nullable<global::System.Int32> _PrivivilegeClass;
        partial void OnPrivivilegeClassChanging(Nullable<global::System.Int32> value);
        partial void OnPrivivilegeClassChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrivilegeContent
        {
            get
            {
                return _PrivilegeContent;
            }
            set
            {
                OnPrivilegeContentChanging(value);
                ReportPropertyChanging("PrivilegeContent");
                _PrivilegeContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrivilegeContent");
                OnPrivilegeContentChanged();
            }
        }
        private global::System.String _PrivilegeContent;
        partial void OnPrivilegeContentChanging(global::System.String value);
        partial void OnPrivilegeContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrivilegeAttribute1
        {
            get
            {
                return _PrivilegeAttribute1;
            }
            set
            {
                OnPrivilegeAttribute1Changing(value);
                ReportPropertyChanging("PrivilegeAttribute1");
                _PrivilegeAttribute1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrivilegeAttribute1");
                OnPrivilegeAttribute1Changed();
            }
        }
        private global::System.String _PrivilegeAttribute1;
        partial void OnPrivilegeAttribute1Changing(global::System.String value);
        partial void OnPrivilegeAttribute1Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrivilegeAttribute2
        {
            get
            {
                return _PrivilegeAttribute2;
            }
            set
            {
                OnPrivilegeAttribute2Changing(value);
                ReportPropertyChanging("PrivilegeAttribute2");
                _PrivilegeAttribute2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrivilegeAttribute2");
                OnPrivilegeAttribute2Changed();
            }
        }
        private global::System.String _PrivilegeAttribute2;
        partial void OnPrivilegeAttribute2Changing(global::System.String value);
        partial void OnPrivilegeAttribute2Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrivilegeAttribute3
        {
            get
            {
                return _PrivilegeAttribute3;
            }
            set
            {
                OnPrivilegeAttribute3Changing(value);
                ReportPropertyChanging("PrivilegeAttribute3");
                _PrivilegeAttribute3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrivilegeAttribute3");
                OnPrivilegeAttribute3Changed();
            }
        }
        private global::System.String _PrivilegeAttribute3;
        partial void OnPrivilegeAttribute3Changing(global::System.String value);
        partial void OnPrivilegeAttribute3Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrivilegeBindingObject
        {
            get
            {
                return _PrivilegeBindingObject;
            }
            set
            {
                OnPrivilegeBindingObjectChanging(value);
                ReportPropertyChanging("PrivilegeBindingObject");
                _PrivilegeBindingObject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrivilegeBindingObject");
                OnPrivilegeBindingObjectChanged();
            }
        }
        private Nullable<global::System.Int32> _PrivilegeBindingObject;
        partial void OnPrivilegeBindingObjectChanging(Nullable<global::System.Int32> value);
        partial void OnPrivilegeBindingObjectChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbLevelRelatePriviege_tbPrivilege", "tbLevelRelatePriviege")]
        public EntityCollection<tbLevelRelatePriviege> tbLevelRelatePriviege
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tbLevelRelatePriviege>("WheatModel.FK_tbLevelRelatePriviege_tbPrivilege", "tbLevelRelatePriviege");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tbLevelRelatePriviege>("WheatModel.FK_tbLevelRelatePriviege_tbPrivilege", "tbLevelRelatePriviege", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbPrivilege_tbPrivilegeClass", "tbPrivilegeClass")]
        public tbPrivilegeClass tbPrivilegeClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbPrivilegeClass>("WheatModel.FK_tbPrivilege_tbPrivilegeClass", "tbPrivilegeClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbPrivilegeClass>("WheatModel.FK_tbPrivilege_tbPrivilegeClass", "tbPrivilegeClass").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tbPrivilegeClass> tbPrivilegeClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tbPrivilegeClass>("WheatModel.FK_tbPrivilege_tbPrivilegeClass", "tbPrivilegeClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tbPrivilegeClass>("WheatModel.FK_tbPrivilege_tbPrivilegeClass", "tbPrivilegeClass", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbPrivilegeClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbPrivilegeClass : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbPrivilegeClass 对象。
        /// </summary>
        /// <param name="privilegeClassId">PrivilegeClassId 属性的初始值。</param>
        public static tbPrivilegeClass CreatetbPrivilegeClass(global::System.Int32 privilegeClassId)
        {
            tbPrivilegeClass tbPrivilegeClass = new tbPrivilegeClass();
            tbPrivilegeClass.PrivilegeClassId = privilegeClassId;
            return tbPrivilegeClass;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrivilegeClassId
        {
            get
            {
                return _PrivilegeClassId;
            }
            set
            {
                if (_PrivilegeClassId != value)
                {
                    OnPrivilegeClassIdChanging(value);
                    ReportPropertyChanging("PrivilegeClassId");
                    _PrivilegeClassId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrivilegeClassId");
                    OnPrivilegeClassIdChanged();
                }
            }
        }
        private global::System.Int32 _PrivilegeClassId;
        partial void OnPrivilegeClassIdChanging(global::System.Int32 value);
        partial void OnPrivilegeClassIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrivilegeName
        {
            get
            {
                return _PrivilegeName;
            }
            set
            {
                OnPrivilegeNameChanging(value);
                ReportPropertyChanging("PrivilegeName");
                _PrivilegeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrivilegeName");
                OnPrivilegeNameChanged();
            }
        }
        private global::System.String _PrivilegeName;
        partial void OnPrivilegeNameChanging(global::System.String value);
        partial void OnPrivilegeNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbPrivilege_tbPrivilegeClass", "tbPrivilege")]
        public EntityCollection<tbPrivilege> tbPrivilege
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tbPrivilege>("WheatModel.FK_tbPrivilege_tbPrivilegeClass", "tbPrivilege");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tbPrivilege>("WheatModel.FK_tbPrivilege_tbPrivilegeClass", "tbPrivilege", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbProduct : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbProduct 对象。
        /// </summary>
        /// <param name="productID">ProductID 属性的初始值。</param>
        /// <param name="storeID">StoreID 属性的初始值。</param>
        public static tbProduct CreatetbProduct(global::System.Int32 productID, global::System.Int32 storeID)
        {
            tbProduct tbProduct = new tbProduct();
            tbProduct.ProductID = productID;
            tbProduct.StoreID = storeID;
            return tbProduct;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _Code;
        partial void OnCodeChanging(Nullable<global::System.Int32> value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Class
        {
            get
            {
                return _Class;
            }
            set
            {
                OnClassChanging(value);
                ReportPropertyChanging("Class");
                _Class = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Class");
                OnClassChanged();
            }
        }
        private Nullable<global::System.Int32> _Class;
        partial void OnClassChanging(Nullable<global::System.Int32> value);
        partial void OnClassChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Double> _Price;
        partial void OnPriceChanging(Nullable<global::System.Double> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MenuX
        {
            get
            {
                return _MenuX;
            }
            set
            {
                OnMenuXChanging(value);
                ReportPropertyChanging("MenuX");
                _MenuX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MenuX");
                OnMenuXChanged();
            }
        }
        private Nullable<global::System.Int16> _MenuX;
        partial void OnMenuXChanging(Nullable<global::System.Int16> value);
        partial void OnMenuXChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MenuY
        {
            get
            {
                return _MenuY;
            }
            set
            {
                OnMenuYChanging(value);
                ReportPropertyChanging("MenuY");
                _MenuY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MenuY");
                OnMenuYChanged();
            }
        }
        private Nullable<global::System.Int16> _MenuY;
        partial void OnMenuYChanging(Nullable<global::System.Int16> value);
        partial void OnMenuYChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EvaluatedCost
        {
            get
            {
                return _EvaluatedCost;
            }
            set
            {
                OnEvaluatedCostChanging(value);
                ReportPropertyChanging("EvaluatedCost");
                _EvaluatedCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EvaluatedCost");
                OnEvaluatedCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _EvaluatedCost;
        partial void OnEvaluatedCostChanging(Nullable<global::System.Decimal> value);
        partial void OnEvaluatedCostChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleCode
        {
            get
            {
                return _TitleCode;
            }
            set
            {
                OnTitleCodeChanging(value);
                ReportPropertyChanging("TitleCode");
                _TitleCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TitleCode");
                OnTitleCodeChanged();
            }
        }
        private global::System.String _TitleCode;
        partial void OnTitleCodeChanging(global::System.String value);
        partial void OnTitleCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreID
        {
            get
            {
                return _StoreID;
            }
            set
            {
                if (_StoreID != value)
                {
                    OnStoreIDChanging(value);
                    ReportPropertyChanging("StoreID");
                    _StoreID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoreID");
                    OnStoreIDChanged();
                }
            }
        }
        private global::System.Int32 _StoreID;
        partial void OnStoreIDChanging(global::System.Int32 value);
        partial void OnStoreIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbOrderItem_tbProduct", "tbOrderItem")]
        public EntityCollection<tbOrderItem> tbOrderItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tbOrderItem>("WheatModel.FK_tbOrderItem_tbProduct", "tbOrderItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tbOrderItem>("WheatModel.FK_tbOrderItem_tbProduct", "tbOrderItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbProductClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbProductClass : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbProductClass 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="storeID">StoreID 属性的初始值。</param>
        public static tbProductClass CreatetbProductClass(global::System.Int32 id, global::System.Int32 storeID)
        {
            tbProductClass tbProductClass = new tbProductClass();
            tbProductClass.ID = id;
            tbProductClass.StoreID = storeID;
            return tbProductClass;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductClass
        {
            get
            {
                return _ProductClass;
            }
            set
            {
                OnProductClassChanging(value);
                ReportPropertyChanging("ProductClass");
                _ProductClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductClass");
                OnProductClassChanged();
            }
        }
        private global::System.String _ProductClass;
        partial void OnProductClassChanging(global::System.String value);
        partial void OnProductClassChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreID
        {
            get
            {
                return _StoreID;
            }
            set
            {
                if (_StoreID != value)
                {
                    OnStoreIDChanging(value);
                    ReportPropertyChanging("StoreID");
                    _StoreID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoreID");
                    OnStoreIDChanged();
                }
            }
        }
        private global::System.Int32 _StoreID;
        partial void OnStoreIDChanging(global::System.Int32 value);
        partial void OnStoreIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbStore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbStore : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbStore 对象。
        /// </summary>
        /// <param name="storeID">StoreID 属性的初始值。</param>
        public static tbStore CreatetbStore(global::System.Int32 storeID)
        {
            tbStore tbStore = new tbStore();
            tbStore.StoreID = storeID;
            return tbStore;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreID
        {
            get
            {
                return _StoreID;
            }
            set
            {
                if (_StoreID != value)
                {
                    OnStoreIDChanging(value);
                    ReportPropertyChanging("StoreID");
                    _StoreID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoreID");
                    OnStoreIDChanged();
                }
            }
        }
        private global::System.Int32 _StoreID;
        partial void OnStoreIDChanging(global::System.Int32 value);
        partial void OnStoreIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreName
        {
            get
            {
                return _StoreName;
            }
            set
            {
                OnStoreNameChanging(value);
                ReportPropertyChanging("StoreName");
                _StoreName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreName");
                OnStoreNameChanged();
            }
        }
        private global::System.String _StoreName;
        partial void OnStoreNameChanging(global::System.String value);
        partial void OnStoreNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreAddress
        {
            get
            {
                return _StoreAddress;
            }
            set
            {
                OnStoreAddressChanging(value);
                ReportPropertyChanging("StoreAddress");
                _StoreAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreAddress");
                OnStoreAddressChanged();
            }
        }
        private global::System.String _StoreAddress;
        partial void OnStoreAddressChanging(global::System.String value);
        partial void OnStoreAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreDBName
        {
            get
            {
                return _StoreDBName;
            }
            set
            {
                OnStoreDBNameChanging(value);
                ReportPropertyChanging("StoreDBName");
                _StoreDBName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreDBName");
                OnStoreDBNameChanged();
            }
        }
        private global::System.String _StoreDBName;
        partial void OnStoreDBNameChanging(global::System.String value);
        partial void OnStoreDBNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreDBUser
        {
            get
            {
                return _StoreDBUser;
            }
            set
            {
                OnStoreDBUserChanging(value);
                ReportPropertyChanging("StoreDBUser");
                _StoreDBUser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreDBUser");
                OnStoreDBUserChanged();
            }
        }
        private global::System.String _StoreDBUser;
        partial void OnStoreDBUserChanging(global::System.String value);
        partial void OnStoreDBUserChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreDBPwd
        {
            get
            {
                return _StoreDBPwd;
            }
            set
            {
                OnStoreDBPwdChanging(value);
                ReportPropertyChanging("StoreDBPwd");
                _StoreDBPwd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreDBPwd");
                OnStoreDBPwdChanged();
            }
        }
        private global::System.String _StoreDBPwd;
        partial void OnStoreDBPwdChanging(global::System.String value);
        partial void OnStoreDBPwdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreDBSouce
        {
            get
            {
                return _StoreDBSouce;
            }
            set
            {
                OnStoreDBSouceChanging(value);
                ReportPropertyChanging("StoreDBSouce");
                _StoreDBSouce = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreDBSouce");
                OnStoreDBSouceChanged();
            }
        }
        private global::System.String _StoreDBSouce;
        partial void OnStoreDBSouceChanging(global::System.String value);
        partial void OnStoreDBSouceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateTime
        {
            get
            {
                return _UpdateTime;
            }
            set
            {
                OnUpdateTimeChanging(value);
                ReportPropertyChanging("UpdateTime");
                _UpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateTime");
                OnUpdateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateTime;
        partial void OnUpdateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateTimeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbCashier_tbStore", "tbCashier")]
        public EntityCollection<tbCashier> tbCashier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tbCashier>("WheatModel.FK_tbCashier_tbStore", "tbCashier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tbCashier>("WheatModel.FK_tbCashier_tbStore", "tbCashier", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WheatModel", "FK_tbOrder_tbStore", "tbOrder")]
        public EntityCollection<tbOrder> tbOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tbOrder>("WheatModel.FK_tbOrder_tbStore", "tbOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tbOrder>("WheatModel.FK_tbOrder_tbStore", "tbOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="tbUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbUser : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbUser 对象。
        /// </summary>
        /// <param name="userId">UserId 属性的初始值。</param>
        public static tbUser CreatetbUser(global::System.Int32 userId)
        {
            tbUser tbUser = new tbUser();
            tbUser.UserId = userId;
            return tbUser;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserPassword
        {
            get
            {
                return _UserPassword;
            }
            set
            {
                OnUserPasswordChanging(value);
                ReportPropertyChanging("UserPassword");
                _UserPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserPassword");
                OnUserPasswordChanged();
            }
        }
        private global::System.String _UserPassword;
        partial void OnUserPasswordChanging(global::System.String value);
        partial void OnUserPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserKey
        {
            get
            {
                return _UserKey;
            }
            set
            {
                OnUserKeyChanging(value);
                ReportPropertyChanging("UserKey");
                _UserKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserKey");
                OnUserKeyChanged();
            }
        }
        private global::System.String _UserKey;
        partial void OnUserKeyChanging(global::System.String value);
        partial void OnUserKeyChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatModel", Name="vExchangeGoods")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vExchangeGoods : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 vExchangeGoods 对象。
        /// </summary>
        /// <param name="memberId">MemberId 属性的初始值。</param>
        /// <param name="productID">ProductID 属性的初始值。</param>
        public static vExchangeGoods CreatevExchangeGoods(global::System.Guid memberId, global::System.Int32 productID)
        {
            vExchangeGoods vExchangeGoods = new vExchangeGoods();
            vExchangeGoods.MemberId = memberId;
            vExchangeGoods.ProductID = productID;
            return vExchangeGoods;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                if (_MemberId != value)
                {
                    OnMemberIdChanging(value);
                    ReportPropertyChanging("MemberId");
                    _MemberId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberId");
                    OnMemberIdChanged();
                }
            }
        }
        private global::System.Guid _MemberId;
        partial void OnMemberIdChanging(global::System.Guid value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PrintTime
        {
            get
            {
                return _PrintTime;
            }
            set
            {
                OnPrintTimeChanging(value);
                ReportPropertyChanging("PrintTime");
                _PrintTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrintTime");
                OnPrintTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _PrintTime;
        partial void OnPrintTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnPrintTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Double> _Price;
        partial void OnPriceChanging(Nullable<global::System.Double> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreName
        {
            get
            {
                return _StoreName;
            }
            set
            {
                OnStoreNameChanging(value);
                ReportPropertyChanging("StoreName");
                _StoreName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreName");
                OnStoreNameChanged();
            }
        }
        private global::System.String _StoreName;
        partial void OnStoreNameChanging(global::System.String value);
        partial void OnStoreNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayBy
        {
            get
            {
                return _PayBy;
            }
            set
            {
                OnPayByChanging(value);
                ReportPropertyChanging("PayBy");
                _PayBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayBy");
                OnPayByChanged();
            }
        }
        private global::System.String _PayBy;
        partial void OnPayByChanging(global::System.String value);
        partial void OnPayByChanged();

        #endregion

    
    }

    #endregion

    
}
