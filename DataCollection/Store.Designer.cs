//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace DataCollection
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class WheatEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“WheatEntities”部分中的连接字符串初始化新 WheatEntities 对象。
        /// </summary>
        public WheatEntities() : base("name=WheatEntities", "WheatEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WheatEntities 对象。
        /// </summary>
        public WheatEntities(string connectionString) : base(connectionString, "WheatEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WheatEntities 对象。
        /// </summary>
        public WheatEntities(EntityConnection connection) : base(connection, "WheatEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tbStore> tbStore
        {
            get
            {
                if ((_tbStore == null))
                {
                    _tbStore = base.CreateObjectSet<tbStore>("tbStore");
                }
                return _tbStore;
            }
        }
        private ObjectSet<tbStore> _tbStore;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 tbStore EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotbStore(tbStore tbStore)
        {
            base.AddObject("tbStore", tbStore);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WheatStoreModel", Name="tbStore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tbStore : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tbStore 对象。
        /// </summary>
        /// <param name="storeID">StoreID 属性的初始值。</param>
        public static tbStore CreatetbStore(global::System.Int32 storeID)
        {
            tbStore tbStore = new tbStore();
            tbStore.StoreID = storeID;
            return tbStore;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreID
        {
            get
            {
                return _StoreID;
            }
            set
            {
                if (_StoreID != value)
                {
                    OnStoreIDChanging(value);
                    ReportPropertyChanging("StoreID");
                    _StoreID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoreID");
                    OnStoreIDChanged();
                }
            }
        }
        private global::System.Int32 _StoreID;
        partial void OnStoreIDChanging(global::System.Int32 value);
        partial void OnStoreIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreName
        {
            get
            {
                return _StoreName;
            }
            set
            {
                OnStoreNameChanging(value);
                ReportPropertyChanging("StoreName");
                _StoreName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreName");
                OnStoreNameChanged();
            }
        }
        private global::System.String _StoreName;
        partial void OnStoreNameChanging(global::System.String value);
        partial void OnStoreNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreAddress
        {
            get
            {
                return _StoreAddress;
            }
            set
            {
                OnStoreAddressChanging(value);
                ReportPropertyChanging("StoreAddress");
                _StoreAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreAddress");
                OnStoreAddressChanged();
            }
        }
        private global::System.String _StoreAddress;
        partial void OnStoreAddressChanging(global::System.String value);
        partial void OnStoreAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreDBName
        {
            get
            {
                return _StoreDBName;
            }
            set
            {
                OnStoreDBNameChanging(value);
                ReportPropertyChanging("StoreDBName");
                _StoreDBName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreDBName");
                OnStoreDBNameChanged();
            }
        }
        private global::System.String _StoreDBName;
        partial void OnStoreDBNameChanging(global::System.String value);
        partial void OnStoreDBNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreDBUser
        {
            get
            {
                return _StoreDBUser;
            }
            set
            {
                OnStoreDBUserChanging(value);
                ReportPropertyChanging("StoreDBUser");
                _StoreDBUser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreDBUser");
                OnStoreDBUserChanged();
            }
        }
        private global::System.String _StoreDBUser;
        partial void OnStoreDBUserChanging(global::System.String value);
        partial void OnStoreDBUserChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreDBPwd
        {
            get
            {
                return _StoreDBPwd;
            }
            set
            {
                OnStoreDBPwdChanging(value);
                ReportPropertyChanging("StoreDBPwd");
                _StoreDBPwd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreDBPwd");
                OnStoreDBPwdChanged();
            }
        }
        private global::System.String _StoreDBPwd;
        partial void OnStoreDBPwdChanging(global::System.String value);
        partial void OnStoreDBPwdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoreDBSouce
        {
            get
            {
                return _StoreDBSouce;
            }
            set
            {
                OnStoreDBSouceChanging(value);
                ReportPropertyChanging("StoreDBSouce");
                _StoreDBSouce = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoreDBSouce");
                OnStoreDBSouceChanged();
            }
        }
        private global::System.String _StoreDBSouce;
        partial void OnStoreDBSouceChanging(global::System.String value);
        partial void OnStoreDBSouceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateTime
        {
            get
            {
                return _UpdateTime;
            }
            set
            {
                OnUpdateTimeChanging(value);
                ReportPropertyChanging("UpdateTime");
                _UpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateTime");
                OnUpdateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateTime;
        partial void OnUpdateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateTimeChanged();

        #endregion

    
    }

    #endregion

    
}
